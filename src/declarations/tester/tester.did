type Tester = 
 service {
   checksubscription: (principal, vec nat, nat) -> (vec ConfirmResult);
 };
type SubscriptionError = 
 variant {
   Duplicate;
   FoundActiveSubscription: nat;
   InsufficientAllowance: nat;
   InvalidDate;
   InvalidInterval;
   Other: record {
            code: nat;
            message: text;
          };
   SubscriptionNotFound;
   TokenNotFound;
   Unauthorized;
 };
type ConfirmResult = 
 opt variant {
       Err: SubscriptionError;
       Ok: nat;
     };
service : () -> Tester
